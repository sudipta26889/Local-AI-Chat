services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - QDRANT_URL=http://${QDRANT_HOST}:${QDRANT_PORT}
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - backend-cache:/root/.cache
    networks:
      - dharas-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    environment:
      - REACT_APP_API_URL=http://localhost:5775/api
      - REACT_APP_WS_URL=ws://localhost:5775/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend-cache:/root/.npm
    networks:
      - dharas-network
    restart: unless-stopped
    command: npm start

  nginx:
    build: ./nginx
    ports:
      - "5775:5775"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - dharas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5775/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s


networks:
  dharas-network:
    driver: bridge

volumes:
  backend-cache:
  frontend-cache: